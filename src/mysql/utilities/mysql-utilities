#!/bin/sh

# shellcheck source=src/common/utilities/common-utilities
. "$SNAP/utilities/common-utilities"

MYSQL_PIDFILE="$SNAP_COMMON/var/run/mysql/mysql.pid"
MYSQL_SOCKET="$SNAP_COMMON/var/run/mysql/mysql.sock"
MYSQL_SETUP_LOCKFILE="$SNAP_COMMON/var/run/mysql-setup"

SLURM_PASSWORD_FILE="$SNAP_COMMON/slurmdb_password"


init_mysql_dirs()
{
    mkdir -p "$(dirname "$MYSQL_PIDFILE")"
    mkdir -p "$(dirname "$MYSQL_SOCKET")"
    mkdir -p "$(dirname "$MYSQL_SETUP_LOCKFILE")"
    chmod 750 "$(dirname "$MYSQL_PIDFILE")"
    chmod 750 "$(dirname "$MYSQL_SOCKET")"
    chmod 750 "$(dirname "$MYSQL_SETUP_LOCKFILE")"
}


mysql_is_running()
{
	# Arguments:
	#  -f: Force the check, i.e. ignore if it's currently in setup
	[ -f "$MYSQL_PIDFILE" ] && (! mysql_setup_running || [ "$1" = "-f" ])
}

wait_for_mysql()
{
	# Arguments:
	#  -f: Force the check, i.e. ignore if it's currently in setup
	wait_for_command "Waiting for MySQL" mysql_is_running "$@"
}

mysql_setup_running()
{
	[ -f "$MYSQL_SETUP_LOCKFILE" ]
}

set_mysql_setup_running()
{
	touch "$MYSQL_SETUP_LOCKFILE"
}

set_mysql_setup_not_running()
{
	rm -f "$MYSQL_SETUP_LOCKFILE"
}

mysql_pid()
{
	if mysql_is_running ""; then
		cat "$MYSQL_PIDFILE"
	else
		echo "Unable to get MySQL PID as it's not yet running" >&2
		echo ""
	fi
}

mysql_set_slurm_password()
{
	echo "$1" > "$SLURM_PASSWORD_FILE"
	chmod 777 "$SLURM_PASSWORD_FILE"
}

mysql_get_slurm_password()
{
	if [ -f "$SLURM_PASSWORD_FILE" ]; then
		cat "$SLURM_PASSWORD_FILE"
	else
		echo "MySQL slurm password has not yet been generated" >&2
		echo ""
	fi
}
