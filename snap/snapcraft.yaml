name: slurm
summary: Slurm Workload Manager
description: |
  Slurm is an open source, fault-tolerant, and highly scalable cluster management and
  job scheduling system for large and small Linux clusters.

adopt-info: slurm

grade: stable
confinement: classic

base: core18

system-usernames:
  snap_daemon: shared

apps:
  mysql:
    command: bin/start_mysql
    stop-command: support-files/mysql.server stop
    daemon: simple
    restart-condition: never
    plugs: [network, network-bind]
  mysql-client:
    command: bin/run-mysql
    plugs: [network, network-bind]
  snap-mysqldump:
    command: bin/snap-mysqldump
    plugs: [network, network-bind]

  munged:
    daemon: simple
    command: bin/munged
    restart-condition: always
    plugs: [network, network-bind]

  munge:
    command: bin/munge
  unmunge:
    command: bin/unmunge
  remunged:
    command: bin/remunge
  mungekey:
    command: bin/mungekey

  slurmdbd:
    command: bin/slurmdbd
    daemon: simple
    restart-condition: on-failure

  slurmctld:
    command: bin/slurmctld
    daemon: simple
    restart-condition: on-failure

  slurmd:
    command: bin/slurmd
    daemon: simple
    restart-condition: on-failure

  slurmrestd:
    command: bin/slurmrestd
    daemon: simple
    restart-condition: on-failure


  sacct:
    command: slurm-bins/sacct
    environment:
      SLURM_CONF: $SNAP_COMMON/etc/slurm/slurm.conf

  sacctmgr:
    command: slurm-bins/sacctmgr
    environment:
      SLURM_CONF: $SNAP_COMMON/etc/slurm/slurm.conf

  salloc:
    command: slurm-bins/salloc
    environment:
      SLURM_CONF: $SNAP_COMMON/etc/slurm/slurm.conf

  sattach:
    command: slurm-bins/sattach
    environment:
      SLURM_CONF: $SNAP_COMMON/etc/slurm/slurm.conf

  sbatch:
    command: slurm-bins/sbatch
    environment:
      SLURM_CONF: $SNAP_COMMON/etc/slurm/slurm.conf

  sbcast:
    command: slurm-bins/sbcast
    environment:
      SLURM_CONF: $SNAP_COMMON/etc/slurm/slurm.conf

  scancel:
    command: slurm-bins/scancel
    environment:
      SLURM_CONF: $SNAP_COMMON/etc/slurm/slurm.conf

  scontrol:
    command: slurm-bins/scontrol
    environment:
      SLURM_CONF: $SNAP_COMMON/etc/slurm/slurm.conf

  sdiag:
    command: slurm-bins/sdiag
    environment:
      SLURM_CONF: $SNAP_COMMON/etc/slurm/slurm.conf

  sinfo:
    command: slurm-bins/sinfo
    environment:
      SLURM_CONF: $SNAP_COMMON/etc/slurm/slurm.conf

  sprio:
    command: slurm-bins/sprio
    environment:
      SLURM_CONF: $SNAP_COMMON/etc/slurm/slurm.conf

  squeue:
    command: slurm-bins/squeue
    environment:
      SLURM_CONF: $SNAP_COMMON/etc/slurm/slurm.conf

  sreport:
    command: slurm-bins/sreport
    environment:
      SLURM_CONF: $SNAP_COMMON/etc/slurm/slurm.conf

  srun:
    command: slurm-bins/srun
    environment:
      SLURM_CONF: $SNAP_COMMON/etc/slurm/slurm.conf

  sshare:
    command: slurm-bins/sshare
    environment:
      SLURM_CONF: $SNAP_COMMON/etc/slurm/slurm.conf

  sstat:
    command: slurm-bins/sstat
    environment:
      SLURM_CONF: $SNAP_COMMON/etc/slurm/slurm.conf

  strigger:
    command: slurm-bins/strigger
    environment:
      SLURM_CONF: $SNAP_COMMON/etc/slurm/slurm.conf

  version:
    command: bin/slurm-version


parts:
  munge:
    plugin: dump
    source: https://github.com/dun/munge.git
    source-type: git
    source-depth: 1
    source-branch: master
    build-packages:
      - gcc
      - libssl-dev
      - autoconf
      - make
      - libtool
      - zlib1g-dev
      - libbz2-dev
    stage:
      - usr/
    prime:
      - usr/
    override-build: |
      snapcraftctl build
      ./bootstrap
      ./configure --prefix=$SNAPCRAFT_PART_INSTALL/usr/local
      make
      make install

  munge-customizations:
    plugin: dump
    source: src/munge/

  boost:
    plugin: dump
    source: https://github.com/kyrofa/boost_tarball/raw/master/boost_1_59_0.tar.gz
    source-checksum: sha1/5123209db194d66d69a9cfa5af8ff473d5941d97
    # When building MySQL, the headers in the source directory 'boost/' are
    # required. Previously, using the 'copy' plugin, the whole archive was put
    # under 'boost/', making the headers reside in 'boost/boost/'. Due to a bug,
    # we now only stage the 'boost/' directory without moving it.
    #
    # Bug: https://bugs.launchpad.net/snapcraft/+bug/1757093
    stage:
      - boost/
    prime:
      - -*

  # mysql part - thanks to @kyrofa
  mysql:
    plugin: cmake
    source: https://github.com/mysql/mysql-server.git
    source-tag: mysql-5.7.28
    source-depth: 1
    override-pull: |
      snapcraftctl pull
      git apply $SNAPCRAFT_STAGE/mysql-support-compile-time-disabling-of-setpriority.patch
    after: [boost, patches]
    configflags:
      - -DWITH_BOOST=$SNAPCRAFT_STAGE
      - -DWITH_INNODB_PAGE_CLEANER_PRIORITY=OFF
      - -DCMAKE_INSTALL_PREFIX=/
      - -DBUILD_CONFIG=mysql_release
      - -DWITH_UNIT_TESTS=OFF
      - -DWITH_EMBEDDED_SERVER=OFF
      - -DWITH_ARCHIVE_STORAGE_ENGINE=OFF
      - -DWITH_BLACKHOLE_STORAGE_ENGINE=OFF
      - -DWITH_FEDERATED_STORAGE_ENGINE=OFF
      - -DWITH_PARTITION_STORAGE_ENGINE=OFF
      - -DINSTALL_MYSQLTESTDIR=
    build-packages:
      - wget
      - g++
      - cmake
      - bison
      - libncurses5-dev
      - libaio-dev
      - libssl-dev
      - pkg-config
    stage-packages:
      - libaio1
    stage:
      # Remove scripts that we'll be replacing with our own
      - -support-files/mysql.server
      - -COPYING
    prime:
      # Remove scripts that we'll be replacing with our own
      - -support-files/mysql.server

      # Remove unused binaries that waste space
      - -bin/innochecksum
      - -bin/lz4_decompress
      - -bin/myisam*
      - -bin/mysqladmin
      - -bin/mysqlbinlog
      - -bin/mysql_client_test
      - -bin/mysql_config*
      - -bin/mysqld_multi
      - -bin/mysqlimport
      - -bin/mysql_install_db
      - -bin/mysql_plugin
      - -bin/mysqlpump
      - -bin/mysql_secure_installation
      - -bin/mysqlshow
      - -bin/mysqlslap
      - -bin/mysql_ssl_rsa_setup
      - -bin/mysqltest
      - -bin/mysql_tzinfo_to_sql
      - -bin/perror
      - -bin/replace
      - -bin/resolveip
      - -bin/resolve_stack_dump
      - -bin/zlib_decompress

  # Copy over our MySQL scripts
  mysql-customizations:
    plugin: dump
    source: src/mysql/

  patches:
    source: src/patches
    plugin: dump
    prime:
      - -*

  common:
    plugin: dump
    source: src/common/
    source-type: local

  slurm:
    after:
      - libcurl
      - munge
      - json-c
      - libyaml
      - http-parser
    plugin: dump
    source: https://download.schedmd.com/slurm/slurm-20.02.1.tar.bz2
    build-packages:
      - libhdf5-dev
      - python-dev
      - libreadline-dev
      - liblua5.3-dev
      - libbz2-dev
      - bzip2
      - mysql-client
      - libmysqlclient-dev
      - liblz4-dev
      - libpmi1-pmix
      - freeipmi
      - rrdtool
      - libncurses5-dev
      - libglib2.0-dev
      # SlurmREST#
    stage-packages:
      - liblua5.3-dev
      - libmysqlclient-dev
      - libaec-dev
      - libhdf5-100
      - mailutils
    stage:
      - bin/
      - share/
      - sbin/
      - include/
      - lib/
      - etc/
      - usr/
      - slurm-bins/
    prime:
      - bin/
      - share/
      - sbin/
      - include/
      - lib/
      - etc/
      - usr/
      - slurm-bins/
    override-build: |
      snapcraftctl build
      ./configure \
          --enable-slurmrestd \
          --with-munge=$SNAPCRAFT_STAGE/usr/local \
          --with-libcurl=$SNAPCRAFT_STAGE/usr/local \
          --with-http-parser=$SNAPCRAFT_STAGE/usr/local \
          --with-yaml=$SNAPCRAFT_STAGE/usr/local \
          --with-json=$SNAPCRAFT_STAGE/usr/local \
          --prefix=$SNAPCRAFT_PART_INSTALL \
          --localstatedir=/var/snap/slurm/common/etc/slurm
      make -j9
      make install
      ldconfig -n /snap/slurm/current/lib/slurm
      snapcraftctl set-version `cat META  | grep Version | awk '{print $2}'`

      mkdir $SNAPCRAFT_PART_INSTALL/slurm-bins
      for slurm_bin in \
         sacct sacctmgr salloc sattach \
         sbatch sbcast scancel scontrol \
         sdiag  sinfo sprio squeue sreport \
         srun sshare sstat strigger; do
          mv $SNAPCRAFT_PART_INSTALL/bin/$slurm_bin $SNAPCRAFT_PART_INSTALL/slurm-bins/
      done;

  http-parser:
    source: https://github.com/nodejs/http-parser.git
    plugin: dump
    source-type: git
    source-depth: 1
    source-branch: master
    build-packages:
      - make
      - gcc
      - libtool
      - autoconf
    stage:
      - usr/
    prime:
      - usr/
    override-build: |
      snapcraftctl build
      PREFIX=$SNAPCRAFT_PART_INSTALL/usr/local make
      PREFIX=$SNAPCRAFT_PART_INSTALL/usr/local make install
      PREFIX=$SNAPCRAFT_PART_INSTALL/usr/local make library

  libyaml:
    source: https://github.com/yaml/libyaml.git
    plugin: dump
    source-type: git
    source-depth: 1
    source-branch: master
    build-packages:
      - make
      - gcc
      - libtool
      - autoconf
    stage:
      - usr/
    prime:
      - usr/
    override-build: |
      snapcraftctl build
      ./bootstrap
      ./configure --prefix=$SNAPCRAFT_PART_INSTALL/usr/local
      make
      make install

  json-c:
    source: https://github.com/json-c/json-c.git
    plugin: cmake
    source-type: git
    source-depth: 1
    source-branch: master
    configflags:
      - -DCMAKE_INSTALL_PREFIX=/usr/local
    stage:
      - usr/
    prime:
      - usr/

  libcurl:
    plugin: dump
    source: https://github.com/curl/curl.git
    source-type: git
    source-depth: 1
    source-tag: curl-7_62_0
    build-packages:
      - libtool
      - libssl-dev
      - autoconf
      - automake
      - make
    stage:
      - usr/
    prime:
      - usr/
    override-build: |
      snapcraftctl build
      ./buildconf
      ./configure --with-ssl --prefix=$SNAPCRAFT_PART_INSTALL/usr/local
      make -j9
      make install

  slurm-configurator:
    plugin: dump
    source: src/slurm-configurator/
    source-type: local
    stage-packages:
      - python3-pip
      - python3-all
      - python3-setuptools
    override-build: |
      snapcraftctl build
      pip3 install jinja2 pyyaml

  slurm-bins:
    plugin: dump
    source: src/slurm-bins/
    source-type: local

  hooks:
    plugin: dump
    source: src/hooks/
    organize:
      bin/: snap/hooks/

  nhc:
    plugin: dump
    source: https://github.com/omnivector-solutions/nhc.git
    source-type: git
    source-depth: 1
    source-branch: snap_scontrol
    build-packages:
      - automake
      - make
    stage:
      - usr/
      - nhc.conf
    prime:
      - usr/
      - nhc.conf
    override-build: |
      snapcraftctl build
      ./autogen.sh
      ./configure --prefix=$SNAPCRAFT_PART_INSTALL/usr
      make
      make install
  
  nhc-bin:
    plugin: dump
    source: src/nhc/
    source-type: local
