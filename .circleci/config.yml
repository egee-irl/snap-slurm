version: 2.1
workflows:
  lint:
    jobs:
      - flake8
  build-and-test:
    jobs:
      - snapcraft
      # - test_centos8:
      #     requires:
      #       - snapcraft
      - test_ubuntu1804:
          requires:
            - snapcraft
      - test_ubuntu2004:
          requires:
            - snapcraft
  build_and_release:
    jobs:
      - snapcraft:
          filters:
            branches:
              only: /20\..*/  # Deploy only on versioned branches
      - release_github:
          requires:
            - snapcraft
jobs:
  flake8:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run:
          command: pip install -r requirements/test-requirements.txt
      - run:
          name: Run Flake8
          command: |
            flake8 --ignore=E402 src/hooks/bin/configure src/slurm-bins/bin/slurm-version
            flake8 src/slurm-bins/bin/slurm-version
  snapcraft:
    machine:
      image: ubuntu-1604:202004-01
    steps:
      - checkout
      - run:
          name: "Install Dependencies"
          command: |
              sudo apt-get update
              sudo apt-get install --only-upgrade -y snapd
              sudo apt-get purge lxd lxd-client lxcfs
              sudo snap install lxd
              sudo lxd init --auto
              sudo snap install snapcraft --classic
      - run:
          name: "Build Snap"
          command: |
            /snap/bin/snapcraft --use-lxd
            mv /home/circleci/project/slurm_20.02.1_amd64.snap /home/circleci/project/slurm.snap
      - save_cache:
          name: Store Slurm Snap for next workflow
          key: SlurmSnap-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - slurm.snap
  test_centos8:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - restore_cache:
          name: Restore Slurm Snap for deployment
          key: SlurmSnap-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Move slurm-snap
          command: mv /home/circleci/project/slurm.snap /home/circleci/project/tests/ubuntu1804/
      - run:
          name: Setup SSH key
          command: |
            mkdir -p ~/.ssh
            echo $KEY | base64 --decode > /tmp/id_rsa
            chmod 600 /tmp/id_rsa
      - run:
          name: Install Terraform
          command: |
            wget https://releases.hashicorp.com/terraform/0.12.26/terraform_0.12.26_linux_amd64.zip
            unzip terraform_0.12.26_linux_amd64.zip
      - run:
          name: Test Terraform
          command: |
            cd tests/ubuntu1804
            ../../terraform init
            ../../terraform apply -auto-approve -var "api_key=${VULTR_API_KEY}"
      - run:
          name: Destroy Terraform
          command: |
            cd tests/ubuntu1804
            ../../terraform destroy -auto-approve -var "api_key=${VULTR_API_KEY}"
  test_ubuntu1804:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - restore_cache:
          name: Restore Slurm Snap for deployment
          key: SlurmSnap-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Move slurm-snap
          command: mv /home/circleci/project/slurm.snap /home/circleci/project/tests/ubuntu1804/
      - run:
          name: Setup SSH key
          command: |
            mkdir -p ~/.ssh
            echo $KEY | base64 --decode > /tmp/id_rsa
            chmod 600 /tmp/id_rsa
      - run:
          name: Install Terraform
          command: |
            wget https://releases.hashicorp.com/terraform/0.12.26/terraform_0.12.26_linux_amd64.zip
            unzip terraform_0.12.26_linux_amd64.zip
      - run:
          name: Test Terraform
          command: |
            cd tests/centos8
            ../../terraform init
            ../../terraform apply -auto-approve -var "api_key=${VULTR_API_KEY}"
      - run:
          name: Destroy Terraform
          command: |
            cd tests/centos8
            ../../terraform destroy -auto-approve -var "api_key=${VULTR_API_KEY}"
  test_ubuntu2004:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - restore_cache:
          name: Restore Slurm Snap for deployment
          key: SlurmSnap-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Move slurm-snap
          command: mv /home/circleci/project/slurm.snap /home/circleci/project/tests/ubuntu2004/
      - run:
          name: Setup SSH key
          command: |
            mkdir -p ~/.ssh
            echo $KEY | base64 --decode > /tmp/id_rsa
            chmod 600 /tmp/id_rsa
      - run:
          name: Install Terraform
          command: |
            wget https://releases.hashicorp.com/terraform/0.12.26/terraform_0.12.26_linux_amd64.zip
            unzip terraform_0.12.26_linux_amd64.zip
      - run:
          name: Test Terraform
          command: |
            cd tests/ubuntu2004
            ../../terraform init
            ../../terraform apply -auto-approve -var "api_key=${VULTR_API_KEY}"
      - run:
          name: Destroy Terraform
          command: |
            cd tests/ubuntu2004
            ../../terraform destroy -auto-approve -var "api_key=${VULTR_API_KEY}"
  release_snapstore:
    docker:
      - image: snapcore/snapcraft:beta
    steps:
      - restore_cache:
          name: Restore Slurm Snap for deployment
          key: SlurmSnap-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: "Publish to Store"
          command: |
            mkdir .snapcraft
            echo $SNAP | base64 --decode --ignore-garbage > .snapcraft/snapcraft.cfg
            snapcraft push slurm.snap --release beta
  release_github:
    docker:
      - image: cimg/go:1.13
    steps:
      - checkout
      - restore_cache:
          name: Restore Slurm Snap for deployment
          key: SlurmSnap-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: "Re-normalize Snap name"
          command: mv /home/circleci/project/slurm.snap /home/circleci/project/slurm_20.02.1_amd64_classic_.snap
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            ghr -t ${GITHUB} -n 'Slurm 20.02.1' -c ${CIRCLE_SHA1} -replace -recreate 20.02.1 /home/circleci/project/slurm_20.02.1_amd64_classic_.snap
